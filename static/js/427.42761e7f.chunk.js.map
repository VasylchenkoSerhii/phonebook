{"version":3,"file":"static/js/427.42761e7f.chunk.js","mappings":"qPAGaA,EAAsBC,EAAAA,GAAAA,QAAH,sJASnBC,GAAYD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,iMAIP,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,UAAUC,CAAtB,IACL,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,IAAnB,IAGK,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,UAAUI,CAAtB,IAILC,EAAQV,EAAAA,GAAAA,MAAH,saAyBLW,GAAYX,EAAAA,EAAAA,IAAOY,EAAAA,GAAPZ,CAAH,oSAKX,SAAAG,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,IAAnB,IAaCK,GAAQb,EAAAA,EAAAA,IAAOc,EAAAA,GAAPd,CAAH,uPAGH,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,UAAUU,EAAtB,IACL,SAAAZ,GAAC,OAAIA,EAAEC,MAAMG,OAAOS,KAAnB,IAOK,SAAAb,GAAC,OAAIA,EAAEC,MAAMC,UAAUY,CAAtB,IAKLC,EAAUlB,EAAAA,GAAAA,OAAH,+YACE,SAAAG,GAAC,OAAIA,EAAEC,MAAMG,OAAOY,MAAnB,IAEZ,SAAAhB,GAAC,OAAIA,EAAEC,MAAMG,OAAOa,KAAnB,IAMG,SAAAjB,GAAC,OAAIA,EAAEC,MAAMC,UAAUY,CAAtB,IASC,SAAAd,GAAC,OAAIA,EAAEC,MAAMC,UAAUC,CAAtB,I,mBCxFZe,EAAQC,EAAAA,KAAaC,MAAM,CAC/BC,KAAMF,EAAAA,KAEHG,QACC,yHACA,gBAEDC,SAAS,oBACZC,MAAOL,EAAAA,KAEJG,QACC,uJACA,iBAEDC,SAAS,qBACZE,SAAUN,EAAAA,KAEPO,IAAI,EAAG,sCACPJ,QAAQ,QAAS,8BACjBA,QAAQ,QAAS,wCACjBA,QAAQ,QAAS,yCACjBC,SAAS,0BAGC,SAASI,IACtB,IAMMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAACjC,EAAD,WACE,SAAC,KAAD,CACEkC,cAhBgB,CACpBT,KAAM,GACNG,MAAO,GACPC,SAAU,IAcNM,SATe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BL,GAASM,EAAAA,EAAAA,IAASF,IAClBC,GACD,EAOKE,iBAAkBjB,EAHpB,UAKE,UAACpB,EAAD,YACE,UAACS,EAAD,mBAEE,SAACC,EAAD,CAAW4B,KAAK,OAAOf,KAAK,UAC5B,SAACX,EAAD,CAAO2B,UAAU,MAAMhB,KAAK,aAE9B,UAACd,EAAD,oBAEE,SAACC,EAAD,CAAW4B,KAAK,QAAQf,KAAK,WAC7B,SAACX,EAAD,CAAO2B,UAAU,MAAMhB,KAAK,cAE9B,UAACd,EAAD,uBAEE,SAACC,EAAD,CAAW4B,KAAK,WAAWf,KAAK,cAChC,SAACX,EAAD,CAAO2B,UAAU,MAAMhB,KAAK,iBAE9B,SAACN,EAAD,CAASqB,KAAK,SAAd,4BAKT,CC7Ec,SAASE,IACtB,OACE,+BACE,SAACX,EAAD,KAGL,C","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { Form, Field, ErrorMessage } from 'formik';\nimport styled from 'styled-components';\n\nexport const SectionRegisterForm = styled.section`\n  padding-bottom: 20px;\n\n  @media screen and (min-width: 1200px) {\n    padding-top: 40px;\n    padding-bottom: 40px;\n  }\n`;\n\nexport const FormStyle = styled(Form)`\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  font-size: ${p => p.theme.fontSizes.m};\n  color: ${p => p.theme.colors.text};\n\n  @media screen and (min-width: 1200px) {\n    font-size: ${p => p.theme.fontSizes.l};\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: flex;\n  align-items: flex-end;\n  width: 215px;\n  justify-content: space-between;\n  text-align: start;\n\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 270px;\n\n    &:not(:last-child) {\n      margin-bottom: 20px;\n    }\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 300px;\n  }\n`;\n\nexport const InputForm = styled(Field)`\n  display: inline-block;\n  width: 150px;\n  height: 20px;\n  outline: none;\n  color: ${p => p.theme.colors.text};\n\n  @media screen and (min-width: 768px) {\n    width: 200px;\n    height: 25px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 200px;\n    height: 35px;\n  }\n`;\n\nexport const Error = styled(ErrorMessage)`\n  position: absolute;\n  top: 20px;\n  font-size: ${p => p.theme.fontSizes.xs};\n  color: ${p => p.theme.colors.error};\n\n  @media screen and (min-width: 768px) {\n    top: 28px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: ${p => p.theme.fontSizes.s};\n    top: 37px;\n  }\n`;\n\nexport const FormBtn = styled.button`\n  background-color: ${p => p.theme.colors.accent};\n  border: none;\n  color: ${p => p.theme.colors.white};\n  padding: 10px 20px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  cursor: pointer;\n  font-size: ${p => p.theme.fontSizes.s};\n  transition: background-color 250ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: #666666;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: ${p => p.theme.fontSizes.m};\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport {\n  FormStyle,\n  SectionRegisterForm,\n  InputForm,\n  Label,\n  Error,\n  FormBtn,\n} from './RegisterForm.styled';\nimport { register } from 'redux/auth/operations';\n\nconst shema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Invalid name'\n    )\n    .required('Name is required'),\n  email: yup\n    .string()\n    .matches(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      'Invalid email'\n    )\n    .required('Email is required'),\n  password: yup\n    .string()\n    .min(8, 'Password must be 8 characters long')\n    .matches(/[0-9]/, 'Password requires a number')\n    .matches(/[a-z]/, 'Password requires a lowercase letter')\n    .matches(/[A-Z]/, 'Password requires an uppercase letter')\n    .required('Password is required'),\n});\n\nexport default function RegisterForm() {\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(register(values));\n    resetForm();\n  };\n\n  return (\n    <SectionRegisterForm>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={shema}\n      >\n        <FormStyle>\n          <Label>\n            Name\n            <InputForm type=\"text\" name=\"name\" />\n            <Error component=\"div\" name=\"name\" />\n          </Label>\n          <Label>\n            Email\n            <InputForm type=\"email\" name=\"email\" />\n            <Error component=\"div\" name=\"email\" />\n          </Label>\n          <Label>\n            Password\n            <InputForm type=\"password\" name=\"password\" />\n            <Error component=\"div\" name=\"password\" />\n          </Label>\n          <FormBtn type=\"submit\">Register</FormBtn>\n        </FormStyle>\n      </Formik>\n    </SectionRegisterForm>\n  );\n}\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <>\n      <RegisterForm />\n    </>\n  );\n}\n"],"names":["SectionRegisterForm","styled","FormStyle","Form","p","theme","fontSizes","m","colors","text","l","Label","InputForm","Field","Error","ErrorMessage","xs","error","s","FormBtn","accent","white","shema","yup","shape","name","matches","required","email","password","min","RegisterForm","dispatch","useDispatch","initialValues","onSubmit","values","resetForm","register","validationSchema","type","component","Register"],"sourceRoot":""}